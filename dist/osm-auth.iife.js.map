{
  "version": 3,
  "sources": ["../node_modules/aes-js/index.js", "../node_modules/diacritics/index.js", "../node_modules/store/src/util.js", "../node_modules/store/src/store-engine.js", "../node_modules/store/storages/localStorage.js", "../node_modules/store/storages/oldFF-globalStorage.js", "../node_modules/store/storages/oldIE-userDataStorage.js", "../node_modules/store/storages/cookieStorage.js", "../node_modules/store/storages/sessionStorage.js", "../node_modules/store/storages/memoryStorage.js", "../node_modules/store/storages/all.js", "../node_modules/store/plugins/lib/json2.js", "../node_modules/store/plugins/json2.js", "../node_modules/store/dist/store.legacy.js", "../src/osm-auth.mjs", "../node_modules/@id-sdk/util/built/util.mjs"],
  "sourcesContent": ["/*! MIT License. Copyright 2015-2018 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */\n(function(root) {\n    \"use strict\";\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        // We cannot safely handle numbers beyond the safe range for integers\n        if (value > Number.MAX_SAFE_INTEGER) {\n            throw new Error('integer value out of safe range');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = parseInt(value / 256);\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define([], function() { return aesjs; });\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n", "exports.remove = removeDiacritics;\n\nvar replacementList = [\n  {\n    base: ' ',\n    chars: \"\\u00A0\",\n  }, {\n    base: '0',\n    chars: \"\\u07C0\",\n  }, {\n    base: 'A',\n    chars: \"\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F\",\n  }, {\n    base: 'AA',\n    chars: \"\\uA732\",\n  }, {\n    base: 'AE',\n    chars: \"\\u00C6\\u01FC\\u01E2\",\n  }, {\n    base: 'AO',\n    chars: \"\\uA734\",\n  }, {\n    base: 'AU',\n    chars: \"\\uA736\",\n  }, {\n    base: 'AV',\n    chars: \"\\uA738\\uA73A\",\n  }, {\n    base: 'AY',\n    chars: \"\\uA73C\",\n  }, {\n    base: 'B',\n    chars: \"\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0181\",\n  }, {\n    base: 'C',\n    chars: \"\\u24b8\\uff23\\uA73E\\u1E08\\u0106\\u0043\\u0108\\u010A\\u010C\\u00C7\\u0187\\u023B\",\n  }, {\n    base: 'D',\n    chars: \"\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018A\\u0189\\u1D05\\uA779\",\n  }, {\n    base: 'Dh',\n    chars: \"\\u00D0\",\n  }, {\n    base: 'DZ',\n    chars: \"\\u01F1\\u01C4\",\n  }, {\n    base: 'Dz',\n    chars: \"\\u01F2\\u01C5\",\n  }, {\n    base: 'E',\n    chars: \"\\u025B\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E\\u1D07\",\n  }, {\n    base: 'F',\n    chars: \"\\uA77C\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B\",\n  }, {\n    base: 'G',\n    chars: \"\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E\\u0262\",\n  }, {\n    base: 'H',\n    chars: \"\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D\",\n  }, {\n    base: 'I',\n    chars: \"\\u24BE\\uFF29\\xCC\\xCD\\xCE\\u0128\\u012A\\u012C\\u0130\\xCF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197\",\n  }, {\n    base: 'J',\n    chars: \"\\u24BF\\uFF2A\\u0134\\u0248\\u0237\",\n  }, {\n    base: 'K',\n    chars: \"\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2\",\n  }, {\n    base: 'L',\n    chars: \"\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780\",\n  }, {\n    base: 'LJ',\n    chars: \"\\u01C7\",\n  }, {\n    base: 'Lj',\n    chars: \"\\u01C8\",\n  }, {\n    base: 'M',\n    chars: \"\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C\\u03FB\",\n  }, {\n    base: 'N',\n    chars: \"\\uA7A4\\u0220\\u24C3\\uFF2E\\u01F8\\u0143\\xD1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u019D\\uA790\\u1D0E\",\n  }, {\n    base: 'NJ',\n    chars: \"\\u01CA\",\n  }, {\n    base: 'Nj',\n    chars: \"\\u01CB\",\n  }, {\n    base: 'O',\n    chars: \"\\u24C4\\uFF2F\\xD2\\xD3\\xD4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\xD5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\xD6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\xD8\\u01FE\\u0186\\u019F\\uA74A\\uA74C\",\n  }, {\n    base: 'OE',\n    chars: \"\\u0152\",\n  }, {\n    base: 'OI',\n    chars: \"\\u01A2\",\n  }, {\n    base: 'OO',\n    chars: \"\\uA74E\",\n  }, {\n    base: 'OU',\n    chars: \"\\u0222\",\n  }, {\n    base: 'P',\n    chars: \"\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754\",\n  }, {\n    base: 'Q',\n    chars: \"\\u24C6\\uFF31\\uA756\\uA758\\u024A\",\n  }, {\n    base: 'R',\n    chars: \"\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782\",\n  }, {\n    base: 'S',\n    chars: \"\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784\",\n  }, {\n    base: 'T',\n    chars: \"\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786\",\n  }, {\n    base: 'Th',\n    chars: \"\\u00DE\",\n  }, {\n    base: 'TZ',\n    chars: \"\\uA728\",\n  }, {\n    base: 'U',\n    chars: \"\\u24CA\\uFF35\\xD9\\xDA\\xDB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\xDC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244\",\n  }, {\n    base: 'V',\n    chars: \"\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245\",\n  }, {\n    base: 'VY',\n    chars: \"\\uA760\",\n  }, {\n    base: 'W',\n    chars: \"\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72\",\n  }, {\n    base: 'X',\n    chars: \"\\u24CD\\uFF38\\u1E8A\\u1E8C\",\n  }, {\n    base: 'Y',\n    chars: \"\\u24CE\\uFF39\\u1EF2\\xDD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE\",\n  }, {\n    base: 'Z',\n    chars: \"\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762\",\n  }, {\n    base: 'a',\n    chars: \"\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250\\u0251\",\n  }, {\n    base: 'aa',\n    chars: \"\\uA733\",\n  }, {\n    base: 'ae',\n    chars: \"\\u00E6\\u01FD\\u01E3\",\n  }, {\n    base: 'ao',\n    chars: \"\\uA735\",\n  }, {\n    base: 'au',\n    chars: \"\\uA737\",\n  }, {\n    base: 'av',\n    chars: \"\\uA739\\uA73B\",\n  }, {\n    base: 'ay',\n    chars: \"\\uA73D\",\n  }, {\n    base: 'b',\n    chars: \"\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253\\u0182\",\n  }, {\n    base: 'c',\n    chars: \"\\uFF43\\u24D2\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184\",\n  }, {\n    base: 'd',\n    chars: \"\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\u018B\\u13E7\\u0501\\uA7AA\",\n  }, {\n    base: 'dh',\n    chars: \"\\u00F0\",\n  }, {\n    base: 'dz',\n    chars: \"\\u01F3\\u01C6\",\n  }, {\n    base: 'e',\n    chars: \"\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u01DD\",\n  }, {\n    base: 'f',\n    chars: \"\\u24D5\\uFF46\\u1E1F\\u0192\",\n  }, {\n    base: 'ff',\n    chars: \"\\uFB00\",\n  }, {\n    base: 'fi',\n    chars: \"\\uFB01\",\n  }, {\n    base: 'fl',\n    chars: \"\\uFB02\",\n  }, {\n    base: 'ffi',\n    chars: \"\\uFB03\",\n  }, {\n    base: 'ffl',\n    chars: \"\\uFB04\",\n  }, {\n    base: 'g',\n    chars: \"\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\uA77F\\u1D79\",\n  }, {\n    base: 'h',\n    chars: \"\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265\",\n  }, {\n    base: 'hv',\n    chars: \"\\u0195\",\n  }, {\n    base: 'i',\n    chars: \"\\u24D8\\uFF49\\xEC\\xED\\xEE\\u0129\\u012B\\u012D\\xEF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131\",\n  }, {\n    base: 'j',\n    chars: \"\\u24D9\\uFF4A\\u0135\\u01F0\\u0249\",\n  }, {\n    base: 'k',\n    chars: \"\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3\",\n  }, {\n    base: 'l',\n    chars: \"\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747\\u026D\",\n  }, {\n    base: 'lj',\n    chars: \"\\u01C9\",\n  }, {\n    base: 'm',\n    chars: \"\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F\",\n  }, {\n    base: 'n',\n    chars: \"\\u24DD\\uFF4E\\u01F9\\u0144\\xF1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5\\u043B\\u0509\",\n  }, {\n    base: 'nj',\n    chars: \"\\u01CC\",\n  }, {\n    base: 'o',\n    chars: \"\\u24DE\\uFF4F\\xF2\\xF3\\xF4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\xF5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\xF6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\xF8\\u01FF\\uA74B\\uA74D\\u0275\\u0254\\u1D11\",\n  }, {\n    base: 'oe',\n    chars: \"\\u0153\",\n  }, {\n    base: 'oi',\n    chars: \"\\u01A3\",\n  }, {\n    base: 'oo',\n    chars: \"\\uA74F\",\n  }, {\n    base: 'ou',\n    chars: \"\\u0223\",\n  }, {\n    base: 'p',\n    chars: \"\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755\\u03C1\",\n  }, {\n    base: 'q',\n    chars: \"\\u24E0\\uFF51\\u024B\\uA757\\uA759\",\n  }, {\n    base: 'r',\n    chars: \"\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783\",\n  }, {\n    base: 's',\n    chars: \"\\u24E2\\uFF53\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B\\u0282\",\n  }, {\n    base: 'ss',\n    chars: \"\\xDF\",\n  }, {\n    base: 't',\n    chars: \"\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787\",\n  }, {\n    base: 'th',\n    chars: \"\\u00FE\",\n  }, {\n    base: 'tz',\n    chars: \"\\uA729\",\n  }, {\n    base: 'u',\n    chars: \"\\u24E4\\uFF55\\xF9\\xFA\\xFB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\xFC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289\",\n  }, {\n    base: 'v',\n    chars: \"\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C\",\n  }, {\n    base: 'vy',\n    chars: \"\\uA761\",\n  }, {\n    base: 'w',\n    chars: \"\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73\",\n  }, {\n    base: 'x',\n    chars: \"\\u24E7\\uFF58\\u1E8B\\u1E8D\",\n  }, {\n    base: 'y',\n    chars: \"\\u24E8\\uFF59\\u1EF3\\xFD\\u0177\\u1EF9\\u0233\\u1E8F\\xFF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF\",\n  }, {\n    base: 'z',\n    chars: \"\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763\",\n  }\n];\n\nvar diacriticsMap = {};\nfor (var i = 0; i < replacementList.length; i += 1) {\n  var chars = replacementList[i].chars;\n  for (var j = 0; j < chars.length; j += 1) {\n    diacriticsMap[chars[j]] = replacementList[i].base;\n  }\n}\n\nfunction removeDiacritics(str) {\n  return str.replace(/[^\\u0000-\\u007e]/g, function(c) {\n    return diacriticsMap[c] || c;\n  });\n}\n\nexports.replacementList = replacementList;\nexports.diacriticsMap = diacriticsMap;\n", "var assign = make_assign()\nvar create = make_create()\nvar trim = make_trim()\nvar Global = (typeof window !== 'undefined' ? window : global)\n\nmodule.exports = {\n\tassign: assign,\n\tcreate: create,\n\ttrim: trim,\n\tbind: bind,\n\tslice: slice,\n\teach: each,\n\tmap: map,\n\tpluck: pluck,\n\tisList: isList,\n\tisFunction: isFunction,\n\tisObject: isObject,\n\tGlobal: Global\n}\n\nfunction make_assign() {\n\tif (Object.assign) {\n\t\treturn Object.assign\n\t} else {\n\t\treturn function shimAssign(obj, props1, props2, etc) {\n\t\t\tfor (var i = 1; i < arguments.length; i++) {\n\t\t\t\teach(Object(arguments[i]), function(val, key) {\n\t\t\t\t\tobj[key] = val\n\t\t\t\t})\n\t\t\t}\t\t\t\n\t\t\treturn obj\n\t\t}\n\t}\n}\n\nfunction make_create() {\n\tif (Object.create) {\n\t\treturn function create(obj, assignProps1, assignProps2, etc) {\n\t\t\tvar assignArgsList = slice(arguments, 1)\n\t\t\treturn assign.apply(this, [Object.create(obj)].concat(assignArgsList))\n\t\t}\n\t} else {\n\t\tfunction F() {} // eslint-disable-line no-inner-declarations\n\t\treturn function create(obj, assignProps1, assignProps2, etc) {\n\t\t\tvar assignArgsList = slice(arguments, 1)\n\t\t\tF.prototype = obj\n\t\t\treturn assign.apply(this, [new F()].concat(assignArgsList))\n\t\t}\n\t}\n}\n\nfunction make_trim() {\n\tif (String.prototype.trim) {\n\t\treturn function trim(str) {\n\t\t\treturn String.prototype.trim.call(str)\n\t\t}\n\t} else {\n\t\treturn function trim(str) {\n\t\t\treturn str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '')\n\t\t}\n\t}\n}\n\nfunction bind(obj, fn) {\n\treturn function() {\n\t\treturn fn.apply(obj, Array.prototype.slice.call(arguments, 0))\n\t}\n}\n\nfunction slice(arr, index) {\n\treturn Array.prototype.slice.call(arr, index || 0)\n}\n\nfunction each(obj, fn) {\n\tpluck(obj, function(val, key) {\n\t\tfn(val, key)\n\t\treturn false\n\t})\n}\n\nfunction map(obj, fn) {\n\tvar res = (isList(obj) ? [] : {})\n\tpluck(obj, function(v, k) {\n\t\tres[k] = fn(v, k)\n\t\treturn false\n\t})\n\treturn res\n}\n\nfunction pluck(obj, fn) {\n\tif (isList(obj)) {\n\t\tfor (var i=0; i<obj.length; i++) {\n\t\t\tif (fn(obj[i], i)) {\n\t\t\t\treturn obj[i]\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor (var key in obj) {\n\t\t\tif (obj.hasOwnProperty(key)) {\n\t\t\t\tif (fn(obj[key], key)) {\n\t\t\t\t\treturn obj[key]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction isList(val) {\n\treturn (val != null && typeof val != 'function' && typeof val.length == 'number')\n}\n\nfunction isFunction(val) {\n\treturn val && {}.toString.call(val) === '[object Function]'\n}\n\nfunction isObject(val) {\n\treturn val && {}.toString.call(val) === '[object Object]'\n}\n", "var util = require('./util')\nvar slice = util.slice\nvar pluck = util.pluck\nvar each = util.each\nvar bind = util.bind\nvar create = util.create\nvar isList = util.isList\nvar isFunction = util.isFunction\nvar isObject = util.isObject\n\nmodule.exports = {\n\tcreateStore: createStore\n}\n\nvar storeAPI = {\n\tversion: '2.0.12',\n\tenabled: false,\n\t\n\t// get returns the value of the given key. If that value\n\t// is undefined, it returns optionalDefaultValue instead.\n\tget: function(key, optionalDefaultValue) {\n\t\tvar data = this.storage.read(this._namespacePrefix + key)\n\t\treturn this._deserialize(data, optionalDefaultValue)\n\t},\n\n\t// set will store the given value at key and returns value.\n\t// Calling set with value === undefined is equivalent to calling remove.\n\tset: function(key, value) {\n\t\tif (value === undefined) {\n\t\t\treturn this.remove(key)\n\t\t}\n\t\tthis.storage.write(this._namespacePrefix + key, this._serialize(value))\n\t\treturn value\n\t},\n\n\t// remove deletes the key and value stored at the given key.\n\tremove: function(key) {\n\t\tthis.storage.remove(this._namespacePrefix + key)\n\t},\n\n\t// each will call the given callback once for each key-value pair\n\t// in this store.\n\teach: function(callback) {\n\t\tvar self = this\n\t\tthis.storage.each(function(val, namespacedKey) {\n\t\t\tcallback.call(self, self._deserialize(val), (namespacedKey || '').replace(self._namespaceRegexp, ''))\n\t\t})\n\t},\n\n\t// clearAll will remove all the stored key-value pairs in this store.\n\tclearAll: function() {\n\t\tthis.storage.clearAll()\n\t},\n\n\t// additional functionality that can't live in plugins\n\t// ---------------------------------------------------\n\n\t// hasNamespace returns true if this store instance has the given namespace.\n\thasNamespace: function(namespace) {\n\t\treturn (this._namespacePrefix == '__storejs_'+namespace+'_')\n\t},\n\n\t// createStore creates a store.js instance with the first\n\t// functioning storage in the list of storage candidates,\n\t// and applies the the given mixins to the instance.\n\tcreateStore: function() {\n\t\treturn createStore.apply(this, arguments)\n\t},\n\t\n\taddPlugin: function(plugin) {\n\t\tthis._addPlugin(plugin)\n\t},\n\t\n\tnamespace: function(namespace) {\n\t\treturn createStore(this.storage, this.plugins, namespace)\n\t}\n}\n\nfunction _warn() {\n\tvar _console = (typeof console == 'undefined' ? null : console)\n\tif (!_console) { return }\n\tvar fn = (_console.warn ? _console.warn : _console.log)\n\tfn.apply(_console, arguments)\n}\n\nfunction createStore(storages, plugins, namespace) {\n\tif (!namespace) {\n\t\tnamespace = ''\n\t}\n\tif (storages && !isList(storages)) {\n\t\tstorages = [storages]\n\t}\n\tif (plugins && !isList(plugins)) {\n\t\tplugins = [plugins]\n\t}\n\n\tvar namespacePrefix = (namespace ? '__storejs_'+namespace+'_' : '')\n\tvar namespaceRegexp = (namespace ? new RegExp('^'+namespacePrefix) : null)\n\tvar legalNamespaces = /^[a-zA-Z0-9_\\-]*$/ // alpha-numeric + underscore and dash\n\tif (!legalNamespaces.test(namespace)) {\n\t\tthrow new Error('store.js namespaces can only have alphanumerics + underscores and dashes')\n\t}\n\t\n\tvar _privateStoreProps = {\n\t\t_namespacePrefix: namespacePrefix,\n\t\t_namespaceRegexp: namespaceRegexp,\n\n\t\t_testStorage: function(storage) {\n\t\t\ttry {\n\t\t\t\tvar testStr = '__storejs__test__'\n\t\t\t\tstorage.write(testStr, testStr)\n\t\t\t\tvar ok = (storage.read(testStr) === testStr)\n\t\t\t\tstorage.remove(testStr)\n\t\t\t\treturn ok\n\t\t\t} catch(e) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t},\n\n\t\t_assignPluginFnProp: function(pluginFnProp, propName) {\n\t\t\tvar oldFn = this[propName]\n\t\t\tthis[propName] = function pluginFn() {\n\t\t\t\tvar args = slice(arguments, 0)\n\t\t\t\tvar self = this\n\n\t\t\t\t// super_fn calls the old function which was overwritten by\n\t\t\t\t// this mixin.\n\t\t\t\tfunction super_fn() {\n\t\t\t\t\tif (!oldFn) { return }\n\t\t\t\t\teach(arguments, function(arg, i) {\n\t\t\t\t\t\targs[i] = arg\n\t\t\t\t\t})\n\t\t\t\t\treturn oldFn.apply(self, args)\n\t\t\t\t}\n\n\t\t\t\t// Give mixing function access to super_fn by prefixing all mixin function\n\t\t\t\t// arguments with super_fn.\n\t\t\t\tvar newFnArgs = [super_fn].concat(args)\n\n\t\t\t\treturn pluginFnProp.apply(self, newFnArgs)\n\t\t\t}\n\t\t},\n\n\t\t_serialize: function(obj) {\n\t\t\treturn JSON.stringify(obj)\n\t\t},\n\n\t\t_deserialize: function(strVal, defaultVal) {\n\t\t\tif (!strVal) { return defaultVal }\n\t\t\t// It is possible that a raw string value has been previously stored\n\t\t\t// in a storage without using store.js, meaning it will be a raw\n\t\t\t// string value instead of a JSON serialized string. By defaulting\n\t\t\t// to the raw string value in case of a JSON parse error, we allow\n\t\t\t// for past stored values to be forwards-compatible with store.js\n\t\t\tvar val = ''\n\t\t\ttry { val = JSON.parse(strVal) }\n\t\t\tcatch(e) { val = strVal }\n\n\t\t\treturn (val !== undefined ? val : defaultVal)\n\t\t},\n\t\t\n\t\t_addStorage: function(storage) {\n\t\t\tif (this.enabled) { return }\n\t\t\tif (this._testStorage(storage)) {\n\t\t\t\tthis.storage = storage\n\t\t\t\tthis.enabled = true\n\t\t\t}\n\t\t},\n\n\t\t_addPlugin: function(plugin) {\n\t\t\tvar self = this\n\n\t\t\t// If the plugin is an array, then add all plugins in the array.\n\t\t\t// This allows for a plugin to depend on other plugins.\n\t\t\tif (isList(plugin)) {\n\t\t\t\teach(plugin, function(plugin) {\n\t\t\t\t\tself._addPlugin(plugin)\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// Keep track of all plugins we've seen so far, so that we\n\t\t\t// don't add any of them twice.\n\t\t\tvar seenPlugin = pluck(this.plugins, function(seenPlugin) {\n\t\t\t\treturn (plugin === seenPlugin)\n\t\t\t})\n\t\t\tif (seenPlugin) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.plugins.push(plugin)\n\n\t\t\t// Check that the plugin is properly formed\n\t\t\tif (!isFunction(plugin)) {\n\t\t\t\tthrow new Error('Plugins must be function values that return objects')\n\t\t\t}\n\n\t\t\tvar pluginProperties = plugin.call(this)\n\t\t\tif (!isObject(pluginProperties)) {\n\t\t\t\tthrow new Error('Plugins must return an object of function properties')\n\t\t\t}\n\n\t\t\t// Add the plugin function properties to this store instance.\n\t\t\teach(pluginProperties, function(pluginFnProp, propName) {\n\t\t\t\tif (!isFunction(pluginFnProp)) {\n\t\t\t\t\tthrow new Error('Bad plugin property: '+propName+' from plugin '+plugin.name+'. Plugins should only return functions.')\n\t\t\t\t}\n\t\t\t\tself._assignPluginFnProp(pluginFnProp, propName)\n\t\t\t})\n\t\t},\n\t\t\n\t\t// Put deprecated properties in the private API, so as to not expose it to accidential\n\t\t// discovery through inspection of the store object.\n\t\t\n\t\t// Deprecated: addStorage\n\t\taddStorage: function(storage) {\n\t\t\t_warn('store.addStorage(storage) is deprecated. Use createStore([storages])')\n\t\t\tthis._addStorage(storage)\n\t\t}\n\t}\n\n\tvar store = create(_privateStoreProps, storeAPI, {\n\t\tplugins: []\n\t})\n\tstore.raw = {}\n\teach(store, function(prop, propName) {\n\t\tif (isFunction(prop)) {\n\t\t\tstore.raw[propName] = bind(store, prop)\t\t\t\n\t\t}\n\t})\n\teach(storages, function(storage) {\n\t\tstore._addStorage(storage)\n\t})\n\teach(plugins, function(plugin) {\n\t\tstore._addPlugin(plugin)\n\t})\n\treturn store\n}\n", "var util = require('../src/util')\nvar Global = util.Global\n\nmodule.exports = {\n\tname: 'localStorage',\n\tread: read,\n\twrite: write,\n\teach: each,\n\tremove: remove,\n\tclearAll: clearAll,\n}\n\nfunction localStorage() {\n\treturn Global.localStorage\n}\n\nfunction read(key) {\n\treturn localStorage().getItem(key)\n}\n\nfunction write(key, data) {\n\treturn localStorage().setItem(key, data)\n}\n\nfunction each(fn) {\n\tfor (var i = localStorage().length - 1; i >= 0; i--) {\n\t\tvar key = localStorage().key(i)\n\t\tfn(read(key), key)\n\t}\n}\n\nfunction remove(key) {\n\treturn localStorage().removeItem(key)\n}\n\nfunction clearAll() {\n\treturn localStorage().clear()\n}\n", "// oldFF-globalStorage provides storage for Firefox\n// versions 6 and 7, where no localStorage, etc\n// is available.\n\nvar util = require('../src/util')\nvar Global = util.Global\n\nmodule.exports = {\n\tname: 'oldFF-globalStorage',\n\tread: read,\n\twrite: write,\n\teach: each,\n\tremove: remove,\n\tclearAll: clearAll,\n}\n\nvar globalStorage = Global.globalStorage\n\nfunction read(key) {\n\treturn globalStorage[key]\n}\n\nfunction write(key, data) {\n\tglobalStorage[key] = data\n}\n\nfunction each(fn) {\n\tfor (var i = globalStorage.length - 1; i >= 0; i--) {\n\t\tvar key = globalStorage.key(i)\n\t\tfn(globalStorage[key], key)\n\t}\n}\n\nfunction remove(key) {\n\treturn globalStorage.removeItem(key)\n}\n\nfunction clearAll() {\n\teach(function(key, _) {\n\t\tdelete globalStorage[key]\n\t})\n}\n", "// oldIE-userDataStorage provides storage for Internet Explorer\n// versions 6 and 7, where no localStorage, sessionStorage, etc\n// is available.\n\nvar util = require('../src/util')\nvar Global = util.Global\n\nmodule.exports = {\n\tname: 'oldIE-userDataStorage',\n\twrite: write,\n\tread: read,\n\teach: each,\n\tremove: remove,\n\tclearAll: clearAll,\n}\n\nvar storageName = 'storejs'\nvar doc = Global.document\nvar _withStorageEl = _makeIEStorageElFunction()\nvar disable = (Global.navigator ? Global.navigator.userAgent : '').match(/ (MSIE 8|MSIE 9|MSIE 10)\\./) // MSIE 9.x, MSIE 10.x\n\nfunction write(unfixedKey, data) {\n\tif (disable) { return }\n\tvar fixedKey = fixKey(unfixedKey)\n\t_withStorageEl(function(storageEl) {\n\t\tstorageEl.setAttribute(fixedKey, data)\n\t\tstorageEl.save(storageName)\n\t})\n}\n\nfunction read(unfixedKey) {\n\tif (disable) { return }\n\tvar fixedKey = fixKey(unfixedKey)\n\tvar res = null\n\t_withStorageEl(function(storageEl) {\n\t\tres = storageEl.getAttribute(fixedKey)\n\t})\n\treturn res\n}\n\nfunction each(callback) {\n\t_withStorageEl(function(storageEl) {\n\t\tvar attributes = storageEl.XMLDocument.documentElement.attributes\n\t\tfor (var i=attributes.length-1; i>=0; i--) {\n\t\t\tvar attr = attributes[i]\n\t\t\tcallback(storageEl.getAttribute(attr.name), attr.name)\n\t\t}\n\t})\n}\n\nfunction remove(unfixedKey) {\n\tvar fixedKey = fixKey(unfixedKey)\n\t_withStorageEl(function(storageEl) {\n\t\tstorageEl.removeAttribute(fixedKey)\n\t\tstorageEl.save(storageName)\n\t})\n}\n\nfunction clearAll() {\n\t_withStorageEl(function(storageEl) {\n\t\tvar attributes = storageEl.XMLDocument.documentElement.attributes\n\t\tstorageEl.load(storageName)\n\t\tfor (var i=attributes.length-1; i>=0; i--) {\n\t\t\tstorageEl.removeAttribute(attributes[i].name)\n\t\t}\n\t\tstorageEl.save(storageName)\n\t})\n}\n\n// Helpers\n//////////\n\n// In IE7, keys cannot start with a digit or contain certain chars.\n// See https://github.com/marcuswestin/store.js/issues/40\n// See https://github.com/marcuswestin/store.js/issues/83\nvar forbiddenCharsRegex = new RegExp(\"[!\\\"#$%&'()*+,/\\\\\\\\:;<=>?@[\\\\]^`{|}~]\", \"g\")\nfunction fixKey(key) {\n\treturn key.replace(/^\\d/, '___$&').replace(forbiddenCharsRegex, '___')\n}\n\nfunction _makeIEStorageElFunction() {\n\tif (!doc || !doc.documentElement || !doc.documentElement.addBehavior) {\n\t\treturn null\n\t}\n\tvar scriptTag = 'script',\n\t\tstorageOwner,\n\t\tstorageContainer,\n\t\tstorageEl\n\n\t// Since #userData storage applies only to specific paths, we need to\n\t// somehow link our data to a specific path.  We choose /favicon.ico\n\t// as a pretty safe option, since all browsers already make a request to\n\t// this URL anyway and being a 404 will not hurt us here.  We wrap an\n\t// iframe pointing to the favicon in an ActiveXObject(htmlfile) object\n\t// (see: http://msdn.microsoft.com/en-us/library/aa752574(v=VS.85).aspx)\n\t// since the iframe access rules appear to allow direct access and\n\t// manipulation of the document element, even for a 404 page.  This\n\t// document can be used instead of the current document (which would\n\t// have been limited to the current path) to perform #userData storage.\n\ttry {\n\t\t/* global ActiveXObject */\n\t\tstorageContainer = new ActiveXObject('htmlfile')\n\t\tstorageContainer.open()\n\t\tstorageContainer.write('<'+scriptTag+'>document.w=window</'+scriptTag+'><iframe src=\"/favicon.ico\"></iframe>')\n\t\tstorageContainer.close()\n\t\tstorageOwner = storageContainer.w.frames[0].document\n\t\tstorageEl = storageOwner.createElement('div')\n\t} catch(e) {\n\t\t// somehow ActiveXObject instantiation failed (perhaps some special\n\t\t// security settings or otherwse), fall back to per-path storage\n\t\tstorageEl = doc.createElement('div')\n\t\tstorageOwner = doc.body\n\t}\n\n\treturn function(storeFunction) {\n\t\tvar args = [].slice.call(arguments, 0)\n\t\targs.unshift(storageEl)\n\t\t// See http://msdn.microsoft.com/en-us/library/ms531081(v=VS.85).aspx\n\t\t// and http://msdn.microsoft.com/en-us/library/ms531424(v=VS.85).aspx\n\t\tstorageOwner.appendChild(storageEl)\n\t\tstorageEl.addBehavior('#default#userData')\n\t\tstorageEl.load(storageName)\n\t\tstoreFunction.apply(this, args)\n\t\tstorageOwner.removeChild(storageEl)\n\t\treturn\n\t}\n}\n", "// cookieStorage is useful Safari private browser mode, where localStorage\n// doesn't work but cookies do. This implementation is adopted from\n// https://developer.mozilla.org/en-US/docs/Web/API/Storage/LocalStorage\n\nvar util = require('../src/util')\nvar Global = util.Global\nvar trim = util.trim\n\nmodule.exports = {\n\tname: 'cookieStorage',\n\tread: read,\n\twrite: write,\n\teach: each,\n\tremove: remove,\n\tclearAll: clearAll,\n}\n\nvar doc = Global.document\n\nfunction read(key) {\n\tif (!key || !_has(key)) { return null }\n\tvar regexpStr = \"(?:^|.*;\\\\s*)\" +\n\t\tescape(key).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") +\n\t\t\"\\\\s*\\\\=\\\\s*((?:[^;](?!;))*[^;]?).*\"\n\treturn unescape(doc.cookie.replace(new RegExp(regexpStr), \"$1\"))\n}\n\nfunction each(callback) {\n\tvar cookies = doc.cookie.split(/; ?/g)\n\tfor (var i = cookies.length - 1; i >= 0; i--) {\n\t\tif (!trim(cookies[i])) {\n\t\t\tcontinue\n\t\t}\n\t\tvar kvp = cookies[i].split('=')\n\t\tvar key = unescape(kvp[0])\n\t\tvar val = unescape(kvp[1])\n\t\tcallback(val, key)\n\t}\n}\n\nfunction write(key, data) {\n\tif(!key) { return }\n\tdoc.cookie = escape(key) + \"=\" + escape(data) + \"; expires=Tue, 19 Jan 2038 03:14:07 GMT; path=/\"\n}\n\nfunction remove(key) {\n\tif (!key || !_has(key)) {\n\t\treturn\n\t}\n\tdoc.cookie = escape(key) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/\"\n}\n\nfunction clearAll() {\n\teach(function(_, key) {\n\t\tremove(key)\n\t})\n}\n\nfunction _has(key) {\n\treturn (new RegExp(\"(?:^|;\\\\s*)\" + escape(key).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(doc.cookie)\n}\n", "var util = require('../src/util')\nvar Global = util.Global\n\nmodule.exports = {\n\tname: 'sessionStorage',\n\tread: read,\n\twrite: write,\n\teach: each,\n\tremove: remove,\n\tclearAll: clearAll\n}\n\nfunction sessionStorage() {\n\treturn Global.sessionStorage\n}\n\nfunction read(key) {\n\treturn sessionStorage().getItem(key)\n}\n\nfunction write(key, data) {\n\treturn sessionStorage().setItem(key, data)\n}\n\nfunction each(fn) {\n\tfor (var i = sessionStorage().length - 1; i >= 0; i--) {\n\t\tvar key = sessionStorage().key(i)\n\t\tfn(read(key), key)\n\t}\n}\n\nfunction remove(key) {\n\treturn sessionStorage().removeItem(key)\n}\n\nfunction clearAll() {\n\treturn sessionStorage().clear()\n}\n", "// memoryStorage is a useful last fallback to ensure that the store\n// is functions (meaning store.get(), store.set(), etc will all function).\n// However, stored values will not persist when the browser navigates to\n// a new page or reloads the current page.\n\nmodule.exports = {\n\tname: 'memoryStorage',\n\tread: read,\n\twrite: write,\n\teach: each,\n\tremove: remove,\n\tclearAll: clearAll,\n}\n\nvar memoryStorage = {}\n\nfunction read(key) {\n\treturn memoryStorage[key]\n}\n\nfunction write(key, data) {\n\tmemoryStorage[key] = data\n}\n\nfunction each(callback) {\n\tfor (var key in memoryStorage) {\n\t\tif (memoryStorage.hasOwnProperty(key)) {\n\t\t\tcallback(memoryStorage[key], key)\n\t\t}\n\t}\n}\n\nfunction remove(key) {\n\tdelete memoryStorage[key]\n}\n\nfunction clearAll(key) {\n\tmemoryStorage = {}\n}\n", "module.exports = [\n\t// Listed in order of usage preference\n\trequire('./localStorage'),\n\trequire('./oldFF-globalStorage'),\n\trequire('./oldIE-userDataStorage'),\n\trequire('./cookieStorage'),\n\trequire('./sessionStorage'),\n\trequire('./memoryStorage')\n]\n", "/* eslint-disable */\n\n//  json2.js\n//  2016-10-28\n//  Public Domain.\n//  NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n//  See http://www.JSON.org/js.html\n//  This code should be minified before deployment.\n//  See http://javascript.crockford.com/jsmin.html\n\n//  USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO\n//  NOT CONTROL.\n\n//  This file creates a global JSON object containing two methods: stringify\n//  and parse. This file provides the ES5 JSON capability to ES3 systems.\n//  If a project might run on IE8 or earlier, then this file should be included.\n//  This file does nothing on ES5 systems.\n\n//      JSON.stringify(value, replacer, space)\n//          value       any JavaScript value, usually an object or array.\n//          replacer    an optional parameter that determines how object\n//                      values are stringified for objects. It can be a\n//                      function or an array of strings.\n//          space       an optional parameter that specifies the indentation\n//                      of nested structures. If it is omitted, the text will\n//                      be packed without extra whitespace. If it is a number,\n//                      it will specify the number of spaces to indent at each\n//                      level. If it is a string (such as \"\\t\" or \"&nbsp;\"),\n//                      it contains the characters used to indent at each level.\n//          This method produces a JSON text from a JavaScript value.\n//          When an object value is found, if the object contains a toJSON\n//          method, its toJSON method will be called and the result will be\n//          stringified. A toJSON method does not serialize: it returns the\n//          value represented by the name/value pair that should be serialized,\n//          or undefined if nothing should be serialized. The toJSON method\n//          will be passed the key associated with the value, and this will be\n//          bound to the value.\n\n//          For example, this would serialize Dates as ISO strings.\n\n//              Date.prototype.toJSON = function (key) {\n//                  function f(n) {\n//                      // Format integers to have at least two digits.\n//                      return (n < 10)\n//                          ? \"0\" + n\n//                          : n;\n//                  }\n//                  return this.getUTCFullYear()   + \"-\" +\n//                       f(this.getUTCMonth() + 1) + \"-\" +\n//                       f(this.getUTCDate())      + \"T\" +\n//                       f(this.getUTCHours())     + \":\" +\n//                       f(this.getUTCMinutes())   + \":\" +\n//                       f(this.getUTCSeconds())   + \"Z\";\n//              };\n\n//          You can provide an optional replacer method. It will be passed the\n//          key and value of each member, with this bound to the containing\n//          object. The value that is returned from your method will be\n//          serialized. If your method returns undefined, then the member will\n//          be excluded from the serialization.\n\n//          If the replacer parameter is an array of strings, then it will be\n//          used to select the members to be serialized. It filters the results\n//          such that only members with keys listed in the replacer array are\n//          stringified.\n\n//          Values that do not have JSON representations, such as undefined or\n//          functions, will not be serialized. Such values in objects will be\n//          dropped; in arrays they will be replaced with null. You can use\n//          a replacer function to replace those with JSON values.\n\n//          JSON.stringify(undefined) returns undefined.\n\n//          The optional space parameter produces a stringification of the\n//          value that is filled with line breaks and indentation to make it\n//          easier to read.\n\n//          If the space parameter is a non-empty string, then that string will\n//          be used for indentation. If the space parameter is a number, then\n//          the indentation will be that many spaces.\n\n//          Example:\n\n//          text = JSON.stringify([\"e\", {pluribus: \"unum\"}]);\n//          // text is '[\"e\",{\"pluribus\":\"unum\"}]'\n\n//          text = JSON.stringify([\"e\", {pluribus: \"unum\"}], null, \"\\t\");\n//          // text is '[\\n\\t\"e\",\\n\\t{\\n\\t\\t\"pluribus\": \"unum\"\\n\\t}\\n]'\n\n//          text = JSON.stringify([new Date()], function (key, value) {\n//              return this[key] instanceof Date\n//                  ? \"Date(\" + this[key] + \")\"\n//                  : value;\n//          });\n//          // text is '[\"Date(---current time---)\"]'\n\n//      JSON.parse(text, reviver)\n//          This method parses a JSON text to produce an object or array.\n//          It can throw a SyntaxError exception.\n\n//          The optional reviver parameter is a function that can filter and\n//          transform the results. It receives each of the keys and values,\n//          and its return value is used instead of the original value.\n//          If it returns what it received, then the structure is not modified.\n//          If it returns undefined then the member is deleted.\n\n//          Example:\n\n//          // Parse the text. Values that look like ISO date strings will\n//          // be converted to Date objects.\n\n//          myData = JSON.parse(text, function (key, value) {\n//              var a;\n//              if (typeof value === \"string\") {\n//                  a =\n//   /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\n//                  if (a) {\n//                      return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],\n//                          +a[5], +a[6]));\n//                  }\n//              }\n//              return value;\n//          });\n\n//          myData = JSON.parse('[\"Date(09/09/2001)\"]', function (key, value) {\n//              var d;\n//              if (typeof value === \"string\" &&\n//                      value.slice(0, 5) === \"Date(\" &&\n//                      value.slice(-1) === \")\") {\n//                  d = new Date(value.slice(5, -1));\n//                  if (d) {\n//                      return d;\n//                  }\n//              }\n//              return value;\n//          });\n\n//  This is a reference implementation. You are free to copy, modify, or\n//  redistribute.\n\n/*jslint\n    eval, for, this\n*/\n\n/*property\n    JSON, apply, call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,\n    getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,\n    lastIndex, length, parse, prototype, push, replace, slice, stringify,\n    test, toJSON, toString, valueOf\n*/\n\n\n// Create a JSON object only if one does not already exist. We create the\n// methods in a closure to avoid creating global variables.\n\nif (typeof JSON !== \"object\") {\n    JSON = {};\n}\n\n(function () {\n    \"use strict\";\n\n    var rx_one = /^[\\],:{}\\s]*$/;\n    var rx_two = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\n    var rx_three = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\n    var rx_four = /(?:^|:|,)(?:\\s*\\[)+/g;\n    var rx_escapable = /[\\\\\"\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n    var rx_dangerous = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n\n    function f(n) {\n        // Format integers to have at least two digits.\n        return n < 10\n            ? \"0\" + n\n            : n;\n    }\n\n    function this_value() {\n        return this.valueOf();\n    }\n\n    if (typeof Date.prototype.toJSON !== \"function\") {\n\n        Date.prototype.toJSON = function () {\n\n            return isFinite(this.valueOf())\n                ? this.getUTCFullYear() + \"-\" +\n                        f(this.getUTCMonth() + 1) + \"-\" +\n                        f(this.getUTCDate()) + \"T\" +\n                        f(this.getUTCHours()) + \":\" +\n                        f(this.getUTCMinutes()) + \":\" +\n                        f(this.getUTCSeconds()) + \"Z\"\n                : null;\n        };\n\n        Boolean.prototype.toJSON = this_value;\n        Number.prototype.toJSON = this_value;\n        String.prototype.toJSON = this_value;\n    }\n\n    var gap;\n    var indent;\n    var meta;\n    var rep;\n\n\n    function quote(string) {\n\n// If the string contains no control characters, no quote characters, and no\n// backslash characters, then we can safely slap some quotes around it.\n// Otherwise we must also replace the offending characters with safe escape\n// sequences.\n\n        rx_escapable.lastIndex = 0;\n        return rx_escapable.test(string)\n            ? \"\\\"\" + string.replace(rx_escapable, function (a) {\n                var c = meta[a];\n                return typeof c === \"string\"\n                    ? c\n                    : \"\\\\u\" + (\"0000\" + a.charCodeAt(0).toString(16)).slice(-4);\n            }) + \"\\\"\"\n            : \"\\\"\" + string + \"\\\"\";\n    }\n\n\n    function str(key, holder) {\n\n// Produce a string from holder[key].\n\n        var i;          // The loop counter.\n        var k;          // The member key.\n        var v;          // The member value.\n        var length;\n        var mind = gap;\n        var partial;\n        var value = holder[key];\n\n// If the value has a toJSON method, call it to obtain a replacement value.\n\n        if (value && typeof value === \"object\" &&\n                typeof value.toJSON === \"function\") {\n            value = value.toJSON(key);\n        }\n\n// If we were called with a replacer function, then call the replacer to\n// obtain a replacement value.\n\n        if (typeof rep === \"function\") {\n            value = rep.call(holder, key, value);\n        }\n\n// What happens next depends on the value's type.\n\n        switch (typeof value) {\n        case \"string\":\n            return quote(value);\n\n        case \"number\":\n\n// JSON numbers must be finite. Encode non-finite numbers as null.\n\n            return isFinite(value)\n                ? String(value)\n                : \"null\";\n\n        case \"boolean\":\n        case \"null\":\n\n// If the value is a boolean or null, convert it to a string. Note:\n// typeof null does not produce \"null\". The case is included here in\n// the remote chance that this gets fixed someday.\n\n            return String(value);\n\n// If the type is \"object\", we might be dealing with an object or an array or\n// null.\n\n        case \"object\":\n\n// Due to a specification blunder in ECMAScript, typeof null is \"object\",\n// so watch out for that case.\n\n            if (!value) {\n                return \"null\";\n            }\n\n// Make an array to hold the partial results of stringifying this object value.\n\n            gap += indent;\n            partial = [];\n\n// Is the value an array?\n\n            if (Object.prototype.toString.apply(value) === \"[object Array]\") {\n\n// The value is an array. Stringify every element. Use null as a placeholder\n// for non-JSON values.\n\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || \"null\";\n                }\n\n// Join all of the elements together, separated with commas, and wrap them in\n// brackets.\n\n                v = partial.length === 0\n                    ? \"[]\"\n                    : gap\n                        ? \"[\\n\" + gap + partial.join(\",\\n\" + gap) + \"\\n\" + mind + \"]\"\n                        : \"[\" + partial.join(\",\") + \"]\";\n                gap = mind;\n                return v;\n            }\n\n// If the replacer is an array, use it to select the members to be stringified.\n\n            if (rep && typeof rep === \"object\") {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    if (typeof rep[i] === \"string\") {\n                        k = rep[i];\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (\n                                gap\n                                    ? \": \"\n                                    : \":\"\n                            ) + v);\n                        }\n                    }\n                }\n            } else {\n\n// Otherwise, iterate through all of the keys in the object.\n\n                for (k in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (\n                                gap\n                                    ? \": \"\n                                    : \":\"\n                            ) + v);\n                        }\n                    }\n                }\n            }\n\n// Join all of the member texts together, separated with commas,\n// and wrap them in braces.\n\n            v = partial.length === 0\n                ? \"{}\"\n                : gap\n                    ? \"{\\n\" + gap + partial.join(\",\\n\" + gap) + \"\\n\" + mind + \"}\"\n                    : \"{\" + partial.join(\",\") + \"}\";\n            gap = mind;\n            return v;\n        }\n    }\n\n// If the JSON object does not yet have a stringify method, give it one.\n\n    if (typeof JSON.stringify !== \"function\") {\n        meta = {    // table of character substitutions\n            \"\\b\": \"\\\\b\",\n            \"\\t\": \"\\\\t\",\n            \"\\n\": \"\\\\n\",\n            \"\\f\": \"\\\\f\",\n            \"\\r\": \"\\\\r\",\n            \"\\\"\": \"\\\\\\\"\",\n            \"\\\\\": \"\\\\\\\\\"\n        };\n        JSON.stringify = function (value, replacer, space) {\n\n// The stringify method takes a value and an optional replacer, and an optional\n// space parameter, and returns a JSON text. The replacer can be a function\n// that can replace values, or an array of strings that will select the keys.\n// A default replacer method can be provided. Use of the space parameter can\n// produce text that is more easily readable.\n\n            var i;\n            gap = \"\";\n            indent = \"\";\n\n// If the space parameter is a number, make an indent string containing that\n// many spaces.\n\n            if (typeof space === \"number\") {\n                for (i = 0; i < space; i += 1) {\n                    indent += \" \";\n                }\n\n// If the space parameter is a string, it will be used as the indent string.\n\n            } else if (typeof space === \"string\") {\n                indent = space;\n            }\n\n// If there is a replacer, it must be a function or an array.\n// Otherwise, throw an error.\n\n            rep = replacer;\n            if (replacer && typeof replacer !== \"function\" &&\n                    (typeof replacer !== \"object\" ||\n                    typeof replacer.length !== \"number\")) {\n                throw new Error(\"JSON.stringify\");\n            }\n\n// Make a fake root object containing our value under the key of \"\".\n// Return the result of stringifying the value.\n\n            return str(\"\", {\"\": value});\n        };\n    }\n\n\n// If the JSON object does not yet have a parse method, give it one.\n\n    if (typeof JSON.parse !== \"function\") {\n        JSON.parse = function (text, reviver) {\n\n// The parse method takes a text and an optional reviver function, and returns\n// a JavaScript value if the text is a valid JSON text.\n\n            var j;\n\n            function walk(holder, key) {\n\n// The walk method is used to recursively walk the resulting structure so\n// that modifications can be made.\n\n                var k;\n                var v;\n                var value = holder[key];\n                if (value && typeof value === \"object\") {\n                    for (k in value) {\n                        if (Object.prototype.hasOwnProperty.call(value, k)) {\n                            v = walk(value, k);\n                            if (v !== undefined) {\n                                value[k] = v;\n                            } else {\n                                delete value[k];\n                            }\n                        }\n                    }\n                }\n                return reviver.call(holder, key, value);\n            }\n\n\n// Parsing happens in four stages. In the first stage, we replace certain\n// Unicode characters with escape sequences. JavaScript handles many characters\n// incorrectly, either silently deleting them, or treating them as line endings.\n\n            text = String(text);\n            rx_dangerous.lastIndex = 0;\n            if (rx_dangerous.test(text)) {\n                text = text.replace(rx_dangerous, function (a) {\n                    return \"\\\\u\" +\n                            (\"0000\" + a.charCodeAt(0).toString(16)).slice(-4);\n                });\n            }\n\n// In the second stage, we run the text against regular expressions that look\n// for non-JSON patterns. We are especially concerned with \"()\" and \"new\"\n// because they can cause invocation, and \"=\" because it can cause mutation.\n// But just to be safe, we want to reject all unexpected forms.\n\n// We split the second stage into 4 regexp operations in order to work around\n// crippling inefficiencies in IE's and Safari's regexp engines. First we\n// replace the JSON backslash pairs with \"@\" (a non-JSON character). Second, we\n// replace all simple value tokens with \"]\" characters. Third, we delete all\n// open brackets that follow a colon or comma or that begin the text. Finally,\n// we look to see that the remaining characters are only whitespace or \"]\" or\n// \",\" or \":\" or \"{\" or \"}\". If that is so, then the text is safe for eval.\n\n            if (\n                rx_one.test(\n                    text\n                        .replace(rx_two, \"@\")\n                        .replace(rx_three, \"]\")\n                        .replace(rx_four, \"\")\n                )\n            ) {\n\n// In the third stage we use the eval function to compile the text into a\n// JavaScript structure. The \"{\" operator is subject to a syntactic ambiguity\n// in JavaScript: it can begin a block or an object literal. We wrap the text\n// in parens to eliminate the ambiguity.\n\n                j = eval(\"(\" + text + \")\");\n\n// In the optional fourth stage, we recursively walk the new structure, passing\n// each name/value pair to a reviver function for possible transformation.\n\n                return (typeof reviver === \"function\")\n                    ? walk({\"\": j}, \"\")\n                    : j;\n            }\n\n// If the text is not JSON parseable, then a SyntaxError is thrown.\n\n            throw new SyntaxError(\"JSON.parse\");\n        };\n    }\n}());", "module.exports = json2Plugin\n\nfunction json2Plugin() {\n\trequire('./lib/json2')\n\treturn {}\n}\n", "var engine = require('../src/store-engine')\n\nvar storages = require('../storages/all')\nvar plugins = [require('../plugins/json2')]\n\nmodule.exports = engine.createStore(storages, plugins)\n", "import { utilQsString, utilStringQs } from '@id-sdk/util';\nimport store from 'store';\n\n\n/**\n * osmAuth\n * Easy authentication with OpenStreetMap over OAuth2.\n * @module\n *\n * @param    o   `Object` containing options:\n * @param    o.scope          OAuth2 scopes requested (e.g. \"read_prefs write_api\")\n * @param    o.client_id      OAuth2 client ID\n * @param    o.client_secret  OAuth2 client secret\n * @param    o.redirect_uri   OAuth2 redirect URI (e.g. \"http://127.0.0.1:8080/land.html\")\n * @param    o.access_token   Can pre-authorize with an OAuth2 bearer token if you have one\n * @param    o.url            A base url (default: \"https://www.openstreetmap.org\")\n * @param    o.auto           If `true`, attempt to authenticate automatically when calling `.xhr()` (default: `false`)\n * @param    o.singlepage     If `true`, use page redirection instead of a popup (default: `false`)\n * @param    o.loading        Function called when auth-related xhr calls start\n * @param    o.done           Function called when auth-related xhr calls end\n * @return  `self`\n */\nexport function osmAuth(o) {\n  var oauth = {};\n\n  /**\n   * authenticated\n   * Test whether the user is currently authenticated\n   * @return `true` if authenticated, `false` if not\n   */\n  oauth.authenticated = function () {\n    return !!token('oauth2_access_token');\n  };\n\n\n  /**\n   * logout\n   * Removes any stored authentication tokens (legacy OAuth1 tokens too)\n   *\n   * @return  `self`\n   */\n  oauth.logout = function () {\n    token('oauth2_access_token', '');         // OAuth2\n    token('oauth_token', '');                 // OAuth1\n    token('oauth_token_secret', '');          // OAuth1\n    token('oauth_request_token_secret', '');  // OAuth1\n    return oauth;\n  };\n\n\n  /**\n   * authenticate\n   * First logs out, then runs the authentiation flow, finally calls the callback.\n   * TODO: detect lack of click event  (probably can settimeout it)\n   *\n   * @param   callback   An \"errback\"-style callback (`err`, `result`), called when complete\n   * @return  none\n   */\n  oauth.authenticate = function (callback) {\n    if (oauth.authenticated()) {\n      callback(null, oauth);\n      return;\n    }\n\n    oauth.logout();\n\n    // ## Request authorization to access resources from the user\n    // and receive authorization code\n    var url =\n      o.url +\n      '/oauth2/authorize?' +\n      utilQsString({\n        client_id: o.client_id,\n        redirect_uri: o.redirect_uri,\n        response_type: 'code',\n        scope: o.scope,\n      });\n\n    if (!o.singlepage) {\n      // Create a 600x550 popup window in the center of the screen\n      var w = 600;\n      var h = 550;\n      var settings = [\n          ['width', w],\n          ['height', h],\n          ['left', screen.width / 2 - w / 2],\n          ['top', screen.height / 2 - h / 2],\n        ]\n        .map(function (x) { return x.join('='); })\n        .join(',');\n\n      var popup = window.open('about:blank', 'oauth_window', settings);\n      oauth.popupWindow = popup;\n      popup.location = url;\n\n      if (!popup) {\n        var error = new Error('Popup was blocked');\n        error.status = 'popup-blocked';\n        throw error;\n      }\n    }\n\n    // Called by a function in the redirect URL page, in the popup window. The\n    // window closes itself.\n    window.authComplete = function (url) {\n      var params = utilStringQs(url.split('?')[1]);\n      getAccessToken(params.code);\n      delete window.authComplete;\n    };\n\n    // ## Getting an access token\n    // The client requests an access token by authenticating with the\n    // authorization server and presenting the `auth_code`, brought\n    // in from a function call on a landing page popup.\n    function getAccessToken(auth_code) {\n      var url =\n        o.url +\n        '/oauth2/token?' +\n        utilQsString({\n          client_id: o.client_id,\n          grant_type: 'authorization_code',\n          code: auth_code,\n          redirect_uri: o.redirect_uri,\n          client_secret: o.client_secret,\n        });\n\n      // The authorization server authenticates the client and validates\n      // the authorization grant, and if valid, issues an access token.\n      oauth.rawxhr('POST', url, null, null, null, accessTokenDone);\n      o.loading();\n    }\n\n    function accessTokenDone(err, xhr) {\n      o.done();\n      if (err) {\n        callback(err);\n        return;\n      }\n      var access_token = JSON.parse(xhr.response);\n      token('oauth2_access_token', access_token.access_token);\n      callback(null, oauth);\n    }\n  };\n\n\n  /**\n   * bringPopupWindowToFront\n   *\n   * @return  `true` if it succeeded, `false` if not\n   */\n  oauth.bringPopupWindowToFront = function () {\n    var broughtPopupToFront = false;\n    try {\n      // This may cause a cross-origin error:\n      // `DOMException: Blocked a frame with origin \"...\" from accessing a cross-origin frame.`\n      if (oauth.popupWindow && !oauth.popupWindow.closed) {\n        oauth.popupWindow.focus();\n        broughtPopupToFront = true;\n      }\n    } catch (err) {\n      // Bringing popup window to front failed (probably because of the cross-origin error mentioned above)\n    }\n    return broughtPopupToFront;\n  };\n\n\n  /**\n   * bootstrapToken\n   * The authorization code is a temporary code that a client can exchange for an access token.\n   * If using this library in single-page mode, you'll need to call this once your application\n   * has an `auth_code` and wants to get an access_token.\n   *\n   * @param   auth_code  The OAuth2 `auth_code`\n   * @param   callback   An \"errback\"-style callback (`err`, `result`), called when complete\n   * @return  none\n   */\n  oauth.bootstrapToken = function (auth_code, callback) {\n    // ## Getting an access token\n    // The client requests an access token by authenticating with the\n    // authorization server and presenting the authorization_code\n    function getAccessToken(auth_code) {\n      var url =\n        o.url +\n        '/oauth2/token?' +\n        utilQsString({\n          client_id: o.client_id,\n          grant_type: 'authorization_code',\n          code: auth_code,\n          redirect_uri: o.redirect_uri,\n          client_secret: o.client_secret,\n        });\n\n      // The authorization server authenticates the client and validates\n      // the authorization grant, and if valid, issues an access token.\n      oauth.rawxhr('POST', url, null, null, null, accessTokenDone);\n      o.loading();\n    }\n\n    function accessTokenDone(err, xhr) {\n      o.done();\n      if (err) {\n        callback(err);\n        return;\n      }\n      var access_token = JSON.parse(xhr.response);\n      token('oauth2_access_token', access_token.access_token);\n      callback(null, oauth);\n    }\n\n    getAccessToken(auth_code);\n  };\n\n\n  /**\n   * xhr\n   * A single `XMLHttpRequest` wrapper that does authenticated calls if the user has logged in.\n   * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n   *\n   * @param    options\n   * @param    options.method   Passed to `xhr.open`  (e.g. 'GET', 'POST')\n   * @param    options.prefix   If `true` path contains a path, if `false` path contains the full url\n   * @param    options.path     The URL path (e.g. \"/api/0.6/user/details\") (or full url, if `prefix`=`false`)\n   * @param    options.content  Passed to `xhr.send`\n   * @param    options.headers  `Object` containing request headers\n   * @param    callback  An \"errback\"-style callback (`err`, `result`), called when complete\n   * @return  ?\n   */\n  oauth.xhr = function (options, callback) {\n    if (!oauth.authenticated()) {\n      if (o.auto) {\n        return oauth.authenticate(run);\n      } else {\n        callback('not authenticated', null);\n        return;\n      }\n    } else {\n      return run();\n    }\n\n    function run() {\n      var url = options.prefix !== false ? (o.url + options.path) : options.path;\n      return oauth.rawxhr(\n        options.method,\n        url,\n        token('oauth2_access_token'),\n        options.content,\n        options.headers,\n        done\n      );\n    }\n\n    function done(err, xhr) {\n      if (err) {\n        callback(err);\n      } else if (xhr.responseXML) {\n        callback(err, xhr.responseXML);\n      } else {\n        callback(err, xhr.response);\n      }\n    }\n  };\n\n\n  /**\n   * rawxhr\n   * Creates the XMLHttpRequest set up with a header and response handling\n   * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n   *\n   * @param    method         Passed to `xhr.open`  (e.g. 'GET', 'POST')\n   * @param    url            Passed to `xhr.open`\n   * @param    access_token   OAuth2 bearer token\n   * @param    data           Passed to `xhr.send`\n   * @param    headers        `Object` containing request headers\n   * @param    callback       An \"errback\"-style callback (`err`, `result`), called when complete\n   * @return  `XMLHttpRequest`\n   */\n  oauth.rawxhr = function (method, url, access_token, data, headers, callback) {\n    headers = headers || { 'Content-Type': 'application/x-www-form-urlencoded' };\n\n    if (access_token) {\n      headers.Authorization = 'Bearer ' + access_token;\n    }\n\n    var xhr = new XMLHttpRequest();\n\n    xhr.onreadystatechange = function () {\n      if (4 === xhr.readyState && 0 !== xhr.status) {\n        if (/^20\\d$/.test(xhr.status)) {   // a 20x status code - OK\n          callback(null, xhr);\n        } else {\n          callback(xhr, null);\n        }\n      }\n    };\n    xhr.onerror = function (e) {\n      callback(e, null);\n    };\n\n    xhr.open(method, url, true);\n    for (var h in headers) xhr.setRequestHeader(h, headers[h]);\n\n    xhr.send(data);\n    return xhr;\n  };\n\n\n  /**\n   * preauth\n   * Pre-authorize this object, if we already have access token from the start\n   *\n   * @param    val   `Object` containing `access_token` property\n   * @return  `self`\n   */\n  oauth.preauth = function (val) {\n    if (val && val.access_token) {\n      token('oauth2_access_token', val.access_token);\n    }\n    return oauth;\n  };\n\n\n  /**\n   * options  (getter / setter)\n   * If passed with no arguments, just return the options\n   * If passed an Object, set the options then attempt to pre-authorize\n   *\n   * @param    val?   Object containing options\n   * @return   current `options` (if getting), or `self` (if setting)\n   */\n  oauth.options = function (val) {\n    if (!arguments.length) return o;\n\n    o = val;\n    o.url = o.url || 'https://www.openstreetmap.org';\n    o.auto = o.auto || false;\n    o.singlepage = o.singlepage || false;\n\n    // Optional loading and loading-done functions for nice UI feedback.\n    // by default, no-ops\n    o.loading = o.loading || function () {};\n    o.done = o.done || function () {};\n    return oauth.preauth(o);\n  };\n\n\n  // Everything below here is initialization/setup code\n\n  // get/set tokens. These are prefixed with the base URL so that `osm-auth`\n  // can be used with multiple APIs and the keys in `localStorage`\n  // will not clash\n  var token;\n\n  if (store.enabled) {\n    token = function (x, y) {\n      if (arguments.length === 1) return store.get(o.url + x);\n      else if (arguments.length === 2) return store.set(o.url + x, y);\n    };\n  } else {\n    var storage = {};\n    token = function (x, y) {\n      if (arguments.length === 1) return storage[o.url + x];\n      else if (arguments.length === 2) return (storage[o.url + x] = y);\n    };\n  }\n\n  // Handle options and attempt to pre-authorize\n  oauth.options(o);\n\n  return oauth;\n}", "// src/aes.ts\nimport aesjs from \"aes-js\";\nvar DEFAULT_128 = [250, 157, 60, 79, 142, 134, 229, 129, 138, 126, 210, 129, 29, 71, 160, 208];\nfunction utilAesEncrypt(text, key) {\n  key = key || DEFAULT_128;\n  const textBytes = aesjs.utils.utf8.toBytes(text);\n  const aesCtr = new aesjs.ModeOfOperation.ctr(key);\n  const encryptedBytes = aesCtr.encrypt(textBytes);\n  const encryptedHex = aesjs.utils.hex.fromBytes(encryptedBytes);\n  return encryptedHex;\n}\nfunction utilAesDecrypt(encryptedHex, key) {\n  key = key || DEFAULT_128;\n  const encryptedBytes = aesjs.utils.hex.toBytes(encryptedHex);\n  const aesCtr = new aesjs.ModeOfOperation.ctr(key);\n  const decryptedBytes = aesCtr.decrypt(encryptedBytes);\n  const text = aesjs.utils.utf8.fromBytes(decryptedBytes);\n  return text;\n}\n\n// src/array.ts\nfunction utilArrayIdentical(a, b) {\n  if (a === b)\n    return true;\n  let i = a.length;\n  if (i !== b.length)\n    return false;\n  while (i--) {\n    if (a[i] !== b[i])\n      return false;\n  }\n  return true;\n}\nfunction utilArrayDifference(a, b) {\n  let other = new Set(b);\n  return Array.from(new Set(a)).filter((val) => !other.has(val));\n}\nfunction utilArrayIntersection(a, b) {\n  let other = new Set(b);\n  return Array.from(new Set(a)).filter((val) => other.has(val));\n}\nfunction utilArrayUnion(a, b) {\n  let result = new Set(a);\n  b.forEach((val) => result.add(val));\n  return Array.from(result);\n}\nfunction utilArrayUniq(a) {\n  return Array.from(new Set(a));\n}\nfunction utilArrayChunk(a, chunkSize) {\n  if (!chunkSize || chunkSize < 0)\n    return [a.slice()];\n  let result = new Array(Math.ceil(a.length / chunkSize));\n  return Array.from(result, (item, i) => {\n    return a.slice(i * chunkSize, i * chunkSize + chunkSize);\n  });\n}\nfunction utilArrayFlatten(a) {\n  return a.reduce((acc, val) => acc.concat(val), []);\n}\nfunction utilArrayGroupBy(a, key) {\n  return a.reduce((acc, item) => {\n    let group = typeof key === \"function\" ? key(item) : item[key];\n    (acc[group] = acc[group] || []).push(item);\n    return acc;\n  }, {});\n}\nfunction utilArrayUniqBy(a, key) {\n  let seen = new Set();\n  return a.reduce((acc, item) => {\n    let val = typeof key === \"function\" ? key(item) : item[key];\n    if (val && !seen.has(val)) {\n      seen.add(val);\n      acc.push(item);\n    }\n    return acc;\n  }, []);\n}\n\n// src/object.ts\nfunction utilObjectOmit(obj, omitKeys) {\n  return Object.keys(obj).reduce((result, key) => {\n    if (omitKeys.indexOf(key) === -1) {\n      result[key] = obj[key];\n    }\n    return result;\n  }, {});\n}\n\n// src/osm.ts\nfunction utilCleanTags(tags) {\n  let out = {};\n  for (const k in tags) {\n    if (!k)\n      continue;\n    const v = tags[k];\n    if (v !== void 0) {\n      out[k] = cleanValue(k, v);\n    }\n  }\n  return out;\n  function cleanValue(k, v) {\n    function keepSpaces(k2) {\n      return /_hours|_times|:conditional$/.test(k2);\n    }\n    function skip(k2) {\n      return /^(description|note|fixme)$/.test(k2);\n    }\n    if (skip(k))\n      return v;\n    let cleaned = v.split(\";\").map((str) => str.trim()).join(keepSpaces(k) ? \"; \" : \";\");\n    if (k.indexOf(\"website\") !== -1 || k.indexOf(\"email\") !== -1 || cleaned.indexOf(\"http\") === 0) {\n      cleaned = cleaned.replace(/[\\u200B-\\u200F\\uFEFF]/g, \"\");\n    }\n    return cleaned;\n  }\n}\nfunction utilDeepMemberSelector(ids, graph, skipMultipolgonMembers) {\n  let idsSet = new Set(ids);\n  let seen = new Set();\n  let returners = new Set();\n  ids.forEach(collectDeepDescendants);\n  return utilEntitySelector(Array.from(returners));\n  function collectDeepDescendants(id) {\n    if (seen.has(id))\n      return;\n    seen.add(id);\n    if (!idsSet.has(id)) {\n      returners.add(id);\n    }\n    let entity = graph.hasEntity(id);\n    if (!entity || entity.type !== \"relation\")\n      return;\n    if (skipMultipolgonMembers && entity.isMultipolygon())\n      return;\n    (entity.members || []).forEach((member) => collectDeepDescendants(member.id));\n  }\n}\nfunction utilEntityAndDeepMemberIDs(ids, graph) {\n  const seen = new Set();\n  ids.forEach(collectDeepDescendants);\n  return Array.from(seen);\n  function collectDeepDescendants(id) {\n    if (seen.has(id))\n      return;\n    seen.add(id);\n    let entity = graph.hasEntity(id);\n    if (!entity || entity.type !== \"relation\")\n      return;\n    (entity.members || []).forEach((member) => collectDeepDescendants(member.id));\n  }\n}\nfunction utilEntityOrMemberSelector(ids, graph) {\n  let seen = new Set(ids);\n  ids.forEach(collectShallowDescendants);\n  return utilEntitySelector(Array.from(seen));\n  function collectShallowDescendants(id) {\n    var entity = graph.hasEntity(id);\n    if (!entity || entity.type !== \"relation\")\n      return;\n    (entity.members || []).forEach((member) => seen.add(member.id));\n  }\n}\nfunction utilEntityOrDeepMemberSelector(ids, graph) {\n  return utilEntitySelector(utilEntityAndDeepMemberIDs(ids, graph));\n}\nfunction utilEntitySelector(ids) {\n  return ids.length ? \".\" + ids.join(\",.\") : \"nothing\";\n}\nfunction utilGetAllNodes(ids, graph) {\n  const seen = new Set();\n  const nodes = new Set();\n  ids.forEach(collectNodes);\n  return Array.from(nodes);\n  function collectNodes(id) {\n    if (seen.has(id))\n      return;\n    seen.add(id);\n    let entity = graph.hasEntity(id);\n    if (!entity)\n      return;\n    if (entity.type === \"node\") {\n      nodes.add(entity);\n    } else if (entity.type === \"way\") {\n      (entity.nodes || []).forEach(collectNodes);\n    } else {\n      (entity.members || []).forEach((member) => collectNodes(member.id));\n    }\n  }\n}\nfunction utilTagDiff(oldTags, newTags) {\n  let tagDiff = [];\n  const keys = utilArrayUnion(Object.keys(oldTags), Object.keys(newTags)).sort();\n  keys.forEach((k) => {\n    const oldVal = oldTags[k];\n    const newVal = newTags[k];\n    if ((oldVal || oldVal === \"\") && (newVal === void 0 || newVal !== oldVal)) {\n      tagDiff.push({\n        type: \"-\",\n        key: k,\n        oldVal,\n        newVal,\n        display: `- ${k}=${oldVal}`\n      });\n    }\n    if ((newVal || newVal === \"\") && (oldVal === void 0 || newVal !== oldVal)) {\n      tagDiff.push({\n        type: \"+\",\n        key: k,\n        oldVal,\n        newVal,\n        display: `+ ${k}=${newVal}`\n      });\n    }\n  });\n  return tagDiff;\n}\nfunction utilTagText(entity) {\n  const obj = entity && entity.tags || {};\n  return Object.keys(obj).map((k) => `${k}=${obj[k]}`).join(\", \");\n}\n\n// src/session_mutex.ts\nfunction utilSessionMutex(name) {\n  let _intervalID;\n  function renew() {\n    let expires = new Date();\n    expires.setSeconds(expires.getSeconds() + 5);\n    document.cookie = name + \"=1; expires=\" + expires.toUTCString() + \"; sameSite=strict\";\n  }\n  let _mutex = {\n    lock: () => {\n      if (_intervalID)\n        return true;\n      let cookie = document.cookie.replace(new RegExp(\"(?:(?:^|.*;)\\\\s*\" + name + \"\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$\"), \"$1\");\n      if (cookie)\n        return false;\n      renew();\n      _intervalID = window.setInterval(renew, 4e3);\n      return true;\n    },\n    unlock: () => {\n      if (!_intervalID)\n        return;\n      document.cookie = name + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT; sameSite=strict\";\n      clearInterval(_intervalID);\n      _intervalID = null;\n    },\n    locked: () => {\n      return !!_intervalID;\n    }\n  };\n  return _mutex;\n}\n\n// src/string.ts\nimport { remove as removeDiacritics } from \"diacritics\";\nfunction utilEditDistance(a, b) {\n  a = removeDiacritics(a.toLowerCase());\n  b = removeDiacritics(b.toLowerCase());\n  if (a.length === 0)\n    return b.length;\n  if (b.length === 0)\n    return a.length;\n  let matrix = [];\n  for (let i = 0; i <= b.length; i++) {\n    matrix[i] = [i];\n  }\n  for (let j = 0; j <= a.length; j++) {\n    matrix[0][j] = j;\n  }\n  for (let i = 1; i <= b.length; i++) {\n    for (let j = 1; j <= a.length; j++) {\n      if (b.charAt(i - 1) === a.charAt(j - 1)) {\n        matrix[i][j] = matrix[i - 1][j - 1];\n      } else {\n        matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1, Math.min(matrix[i][j - 1] + 1, matrix[i - 1][j] + 1));\n      }\n    }\n  }\n  return matrix[b.length][a.length];\n}\nfunction utilHashcode(str) {\n  let hash = 0;\n  if (str.length === 0)\n    return hash;\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash;\n  }\n  return hash;\n}\nfunction utilQsString(obj, noencode) {\n  function softEncode(s) {\n    return encodeURIComponent(s).replace(/(%2F|%3A|%2C|%7B|%7D)/g, decodeURIComponent);\n  }\n  return Object.keys(obj).sort().map((key) => {\n    return encodeURIComponent(key) + \"=\" + (noencode ? softEncode(obj[key]) : encodeURIComponent(obj[key]));\n  }).join(\"&\");\n}\nfunction utilStringQs(str) {\n  let i = 0;\n  while (i < str.length && (str[i] === \"?\" || str[i] === \"#\"))\n    i++;\n  str = str.slice(i);\n  return str.split(\"&\").reduce((obj, pair) => {\n    const parts = pair.split(\"=\");\n    if (parts.length === 2) {\n      obj[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return obj;\n  }, {});\n}\nfunction utilUnicodeCharsCount(str) {\n  return Array.from(str).length;\n}\nfunction utilUnicodeCharsTruncated(str, limit) {\n  return Array.from(str).slice(0, limit).join(\"\");\n}\nfunction utilSafeString(str) {\n  return str.toLowerCase().replace(/[^a-z0-9]+/g, \"_\");\n}\nfunction utilUniqueString(val) {\n  return \"ideditor-\" + utilSafeString(val.toString()) + \"-\" + new Date().getTime().toString();\n}\nexport {\n  utilAesDecrypt,\n  utilAesEncrypt,\n  utilArrayChunk,\n  utilArrayDifference,\n  utilArrayFlatten,\n  utilArrayGroupBy,\n  utilArrayIdentical,\n  utilArrayIntersection,\n  utilArrayUnion,\n  utilArrayUniq,\n  utilArrayUniqBy,\n  utilCleanTags,\n  utilDeepMemberSelector,\n  utilEditDistance,\n  utilEntityAndDeepMemberIDs,\n  utilEntityOrDeepMemberSelector,\n  utilEntityOrMemberSelector,\n  utilEntitySelector,\n  utilGetAllNodes,\n  utilHashcode,\n  utilObjectOmit,\n  utilQsString,\n  utilSafeString,\n  utilSessionMutex,\n  utilStringQs,\n  utilTagDiff,\n  utilTagText,\n  utilUnicodeCharsCount,\n  utilUnicodeCharsTruncated,\n  utilUniqueString\n};\n"],
  "mappings": "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AM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,IAAM,IAAM,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAM,IAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,IAAM,GAAM,KAAM,IAAM,IAAM,IAAM,IAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,IAAM,IAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,IAAM,KAAM,IAAM,KAAM,IAAM,IAAM,KAAM,IAAM,KAAM,EAAI;AACvgD,YAAI,KAAI,CAAC,IAAM,GAAM,KAAM,KAAM,IAAM,IAAM,KAAM,IAAM,KAAM,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,IAAM,KAAM,KAAM,IAAM,KAAM,IAAM,IAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,IAAM,KAAM,KAAM,IAAM,IAAM,KAAM,IAAM,KAAM,IAAM,IAAM,KAAM,KAAM,IAAM,GAAM,IAAM,KAAM,KAAM,IAAM,KAAM,IAAM,KAAM,KAAM,IAAM,KAAM,IAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,IAAM,KAAM,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAM,IAAM,KAAM,KAAM,KAAM,KAAM,IAAM,IAAM,IAAM,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,GAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,IAAM,GAAM,KAAM,KAAM,IAAM,GAAM,KAAM,IAAM,IAAM,KAAM,KAAM,IAAM,IAAM,GAAM,KAAM,KAAM,KAAM,GAAM,GAAM,IAAM,KAAM,KAAM,IAAM,KAAM,IAAM,IAAM,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,IAAM,KAAM,IAAM,KAAM,KAAM,KAAM,IAAM,KAAM,IAAM,KAAM,IAAM,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",
  "names": []
}
